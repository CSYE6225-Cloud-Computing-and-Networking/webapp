name: Validate Packer

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: AWS config
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Packer init
      run: packer init ./scripts/setup.pkr.hcl
    
    - name: Zip web app
      run: |
        zip -r webapp.zip server/
    
    - name: Packer format
      working-directory: ./scripts/
      run: packer fmt -check setup.pkr.hcl
    
    - name: Packer validate
      working-directory: ./scripts/
      run: packer validate setup.pkr.hcl
    
    - name: template update
      run: |
       new_ami_id=$(aws ec2 describe-images --filters "Name=name,Values=csye*" "Name=state,Values=available" --query "sort_by(Images, &CreationDate)[-1].ImageId" --output text)
       echo "AMI ID: $new_ami_id"
       launch_template_id=$(aws ec2 describe-launch-templates --filters "Name=launch-template-name,Values=appLaunch*" --query "LaunchTemplates[0].LaunchTemplateId" --output text)
       echo "Launch Template ID: $launch_template_id"
       aws ec2 create-launch-template-version --launch-template-id "$launch_template_id" --source-version \$Latest --version-description "New version with updated AMI" --launch-template-data "{\"ImageId\":\"$new_ami_id\"}"
       aws autoscaling start-instance-refresh --auto-scaling-group-name "webapp_asg"
    - name: ami display
      run: |
        echo "AMI ID: $new_ami_id "
   